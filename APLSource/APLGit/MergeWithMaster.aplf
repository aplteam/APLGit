 {r}←{noPrompt}MergeWithMaster y;project;folder;currentBranch;gitMsg;space;buff
⍝ This function is usually executed only in case `FastForwardMergeWithMaster` failes. See there why
⍝ that might fail.\\
⍝ Like `FastForwardMergeWithMaster`, `MergeWithMaster` performs several steps:
⍝ 1. Pulls the master (if user agrees)
⍝ 2. Merge `currentBranch` with the master
⍝ 3. Push the master
⍝ 4. Delete the branch in question\\
⍝ Use this in case `FastForwardMergeWithMaster` does not work; see there why that might be the case.\\
⍝ Call `Squash` beforehand in order to clean up the commit history.\\
⍝ Pulls the master first (the user will be prompted) and pushes after the merge.\\
⍝ For what `y` can actually be see `EstablishProject`.\\
 noPrompt←{0<⎕NC ⍵:⍎⍵ ⋄ 0}'noPrompt'
 project←EstablishProject y
 :If (,'#')≢,⊃⎕NSI
     ⎕←'This function must be called from #'
     ⎕←'Please enter the following command before executing the function again:'
     ⎕←'      )CS'
 :Else
     'No open acre projects'⎕SIGNAL 6/⍨0=≢project
     (space folder)←project[1 2]
     currentBranch←CurrentBranch folder
     :If 1<≢⎕SE.acre.Projects ⍬
         ⎕←{(⎕PW-1)↑'--- ',⍵,' ',⎕PW⍴'-'}'Project <',(1⊃project),'> with branch "',currentBranch,'"'
     :EndIf
     'This command MUST NOT be executed in "master"'⎕SIGNAL 11/⍨'master'≡currentBranch
     ('Branch "',currentBranch,'" is dirty!')⎕SIGNAL 11/⍨IsDirty folder
     :If 1 U.YesOrNo'Would you like to pull the master?'
         buff←PullMaster folder
     :AndIf 0<'CONFLICT'{+/⍺∧.=⍨(≢⍺)↑[2]⍵}↑,buff
         {}⎕SE.UCMD'acre.Close ',space
         ⎕←'Because of the conflict the project is now closed.'
         ⎕←'Re-open in a clean environment and then solve the merge conflicts.'
         :Return
     :EndIf
     ⎕←'Now checking out master...'
     ⎕←⊃folder U.RunGitCommand'checkout master'
     ⎕←gitMsg←↑folder U.RunGitCommand'merge ',currentBranch
     ⎕SIGNAL/U.CheckForFatal gitMsg
     ⎕←⊃folder DeleteBranch currentBranch
     :If noPrompt
     :OrIf 1 U.YesOrNo'Would you like to push the master?'
         :If 0=≢∊gitMsg←1 Push folder
             ⎕←'Pushed!'
         :Else
             ⎕←↑gitMsg
         :EndIf
     :EndIf
     {}⎕SE.UCMD'acre.Close ',space
     #.⎕EX space
     ∆DefaultDir←((⊂∆DefaultDir)∊(⎕SE.acre.Projects ⍬)[;2])/∆DefaultDir
     ⎕CS'#'
     ⎕←'Project closed, space "',space,'" deleted and branch "',currentBranch,'" deleted'
 :EndIf
⍝Done
